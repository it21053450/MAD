package com.example.text_firebase;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class MainActivity extends AppCompatActivity {

    EditText id, name, address, contact;
    Button save, delete, update, show;
    Student std;
    DatabaseReference dbRef;

    private  void clearControl(){
        id.setText("");
        name.setText("");
        address.setText("");
        contact.setText("");
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        id = findViewById(R.id.editTextID);
        name = findViewById(R.id.editTextName);
        address = findViewById(R.id.editTextAddress);
        contact = findViewById(R.id.editTextContact);

        save = findViewById(R.id.buttonSave);
        delete = findViewById(R.id.buttonDelete);
        show = findViewById(R.id.buttonShow);
        update = findViewById(R.id.buttonUpdate);

        std = new Student();

        //Insert DAta
        save.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                dbRef = FirebaseDatabase.getInstance().getReference().child("Student");
                try{
                    if(TextUtils.isEmpty(id.getText().toString())){
                        Toast.makeText(getApplicationContext(), "Please Enter Id", Toast.LENGTH_SHORT).show();
                    }else if(TextUtils.isEmpty(name.getText().toString())){
                        Toast.makeText(getApplicationContext(), "Please Enter name", Toast.LENGTH_SHORT).show();
                    }else if(TextUtils.isEmpty(address.getText().toString())){
                        Toast.makeText(getApplicationContext(), "Please Enter address", Toast.LENGTH_SHORT).show();
                    }else{
                        std.setId(id.getText().toString().trim());
                        std.setName(name.getText().toString().trim());
                        std.setAddress(address.getText().toString().trim());
                        std.setContact(Integer.parseInt(contact.getText().toString().trim()));

                        //dbRef.push().setValue(std);
                        dbRef.child("Std1").setValue(std);//insert data in our own key
                        Toast.makeText(getApplicationContext(),"Data saved Successfully", Toast.LENGTH_SHORT).show();
                        clearControl();
                    }

                }catch (NumberFormatException e){
                    Toast.makeText(getApplicationContext(), "Invalid Contact Number", Toast.LENGTH_SHORT).show();
                }
            }
        });


        //Retrive Data
        show.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                DatabaseReference readDB = FirebaseDatabase.getInstance().getReference().child("Student").child("Std1");
                readDB.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot snapshot) {
                        if(snapshot.hasChildren()){
                            id.setText(snapshot.child("id").getValue().toString());
                            name.setText(snapshot.child("name").getValue().toString());
                            address.setText(snapshot.child("address").getValue().toString());
                            contact.setText(snapshot.child("contact").getValue().toString());
                        }else{
                            Toast.makeText(getApplicationContext(), "No Source to Display !!!", Toast.LENGTH_SHORT).show();
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError error) {

                    }
                });
            }
        });

        //Update data
        update.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                DatabaseReference updateDB = FirebaseDatabase.getInstance().getReference().child("Student");
                updateDB.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot snapshot) {
                        if(snapshot.hasChild("Std1")){
                            try{
                                std.setId(id.getText().toString().trim());
                                std.setName(name.getText().toString().trim());
                                std.setAddress(address.getText().toString().trim());
                                std.setContact(Integer.parseInt(contact.getText().toString().trim()));


                                dbRef = FirebaseDatabase.getInstance().getReference().child("Student").child("Std1");
                                dbRef.setValue(std);
                                clearControl();
                                Toast.makeText(getApplicationContext(),"Data saved Successfully", Toast.LENGTH_SHORT).show();

                            }catch (NumberFormatException e){
                                Toast.makeText(getApplicationContext(),"Invalid Contact Number", Toast.LENGTH_SHORT).show();
                            }
                        }else{
                            Toast.makeText(getApplicationContext(),"No Source to update !!!", Toast.LENGTH_SHORT).show();
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError error) {

                    }
                });

            }
        });

        //Delete data
        delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                DatabaseReference deleteDB = FirebaseDatabase.getInstance().getReference().child("Student");
                deleteDB.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot snapshot) {
                        if (snapshot.hasChild("Std1")) {
                            dbRef = FirebaseDatabase.getInstance().getReference().child("Student").child("Std1");
                            dbRef.removeValue();
                            clearControl();
                            Toast.makeText(getApplicationContext(), "Data delete successful", Toast.LENGTH_SHORT).show();

                        } else {
                            Toast.makeText(getApplicationContext(), "No Source to delete !!!", Toast.LENGTH_SHORT).show();
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError error) {

                    }
                });
            }
        });



    }



}
